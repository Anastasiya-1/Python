{"name": "Проверка сложения 7 + 8 на калькуляторе с задержкой", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.InvalidSessionIdException: Message: invalid session id: session deleted as the browser has closed the connection\nfrom disconnected: not connected to DevTools\n  (Session info: chrome=139.0.7258.128); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalidsessionidexception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7febc78d5+2802741]\n\tGetHandleVerifier [0x0x7ff7fe92eb70+79568]\n\t(No symbol) [0x0x7ff7fe6cc0fa]\n\t(No symbol) [0x0x7ff7fe6b8365]\n\t(No symbol) [0x0x7ff7fe6dcef4]\n\t(No symbol) [0x0x7ff7fe7522c5]\n\t(No symbol) [0x0x7ff7fe772752]\n\t(No symbol) [0x0x7ff7fe74aa63]\n\t(No symbol) [0x0x7ff7fe713c91]\n\t(No symbol) [0x0x7ff7fe714a23]\n\tGetHandleVerifier [0x0x7ff7febf2ced+2979917]\n\tGetHandleVerifier [0x0x7ff7febed0f3+2956371]\n\tGetHandleVerifier [0x0x7ff7fec0acbd+3078173]\n\tGetHandleVerifier [0x0x7ff7fe94836e+184014]\n\tGetHandleVerifier [0x0x7ff7fe95024f+216495]\n\tGetHandleVerifier [0x0x7ff7fe9370c4+113700]\n\tGetHandleVerifier [0x0x7ff7fe937279+114137]\n\tGetHandleVerifier [0x0x7ff7fe91df78+10968]\n\tBaseThreadInitThunk [0x0x7ff8c1f27374+20]\n\tRtlUserThreadStart [0x0x7ff8c3b3cc91+33]", "trace": "@allure.title(\"Проверка сложения 7 + 8 на калькуляторе с задержкой\")\n    @allure.description(\"Тест выполняет 7 + 8 на slow-calculator с задержкой 45с\")\n    @allure.feature(\"Калькулятор\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_calculator_sum():\n        \"\"\"Проверяет правильное сложение с задержкой.\"\"\"\n        driver = webdriver.Chrome()\n        try:\n            page = CalculatorPage(driver)\n            with allure.step(\"Открыть страницу калькулятора\"):\n                page.open()\n            with allure.step(\"Установить задержку 45 секунд\"):\n                page.set_delay(45)\n            with allure.step(\"Ввести выражение 7 + 8\"):\n                page.click_button(\"7\")\n                page.click_button(\"+\")\n                page.click_button(\"8\")\n            with allure.step(\"Выполнить вычисление (нажать =)\"):\n                page.click_button(\"=\")\n            with allure.step(\"Дождаться и проверить результат '15' через PageObject\"):\n>               result = page.wait_for_result(\"15\", timeout=60)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nlesson_10\\tests\\test_calculator.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nlesson_10\\pages\\calculator_page.py:58: in wait_for_result\n    wait.until(lambda d: d.find_element(By.CSS_SELECTOR, \"div.screen\").text.strip() == expected)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:129: in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\nlesson_10\\pages\\calculator_page.py:58: in <lambda>\n    wait.until(lambda d: d.find_element(By.CSS_SELECTOR, \"div.screen\").text.strip() == expected)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:922: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:454: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001F1B2CC6270>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"invalid session id\",\"message\":\"invalid session id: session deleted as the...ff7fe91df78+10968]\\\\n\\\\tBaseThreadInitThunk [0x0x7ff8c1f27374+20]\\\\n\\\\tRtlUserThreadStart [0x0x7ff8c3b3cc91+33]\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidSessionIdException: Message: invalid session id: session deleted as the browser has closed the connection\nE       from disconnected: not connected to DevTools\nE         (Session info: chrome=139.0.7258.128); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalidsessionidexception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7febc78d5+2802741]\nE       \tGetHandleVerifier [0x0x7ff7fe92eb70+79568]\nE       \t(No symbol) [0x0x7ff7fe6cc0fa]\nE       \t(No symbol) [0x0x7ff7fe6b8365]\nE       \t(No symbol) [0x0x7ff7fe6dcef4]\nE       \t(No symbol) [0x0x7ff7fe7522c5]\nE       \t(No symbol) [0x0x7ff7fe772752]\nE       \t(No symbol) [0x0x7ff7fe74aa63]\nE       \t(No symbol) [0x0x7ff7fe713c91]\nE       \t(No symbol) [0x0x7ff7fe714a23]\nE       \tGetHandleVerifier [0x0x7ff7febf2ced+2979917]\nE       \tGetHandleVerifier [0x0x7ff7febed0f3+2956371]\nE       \tGetHandleVerifier [0x0x7ff7fec0acbd+3078173]\nE       \tGetHandleVerifier [0x0x7ff7fe94836e+184014]\nE       \tGetHandleVerifier [0x0x7ff7fe95024f+216495]\nE       \tGetHandleVerifier [0x0x7ff7fe9370c4+113700]\nE       \tGetHandleVerifier [0x0x7ff7fe937279+114137]\nE       \tGetHandleVerifier [0x0x7ff7fe91df78+10968]\nE       \tBaseThreadInitThunk [0x0x7ff8c1f27374+20]\nE       \tRtlUserThreadStart [0x0x7ff8c3b3cc91+33]\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: InvalidSessionIdException"}, "description": "Тест выполняет 7 + 8 на slow-calculator с задержкой 45с", "steps": [{"name": "Открыть страницу калькулятора", "status": "passed", "start": 1755695692250, "stop": 1755695693124}, {"name": "Установить задержку 45 секунд", "status": "passed", "start": 1755695693124, "stop": 1755695693226}, {"name": "Ввести выражение 7 + 8", "status": "passed", "start": 1755695693226, "stop": 1755695693468}, {"name": "Выполнить вычисление (нажать =)", "status": "passed", "start": 1755695693468, "stop": 1755695693531}, {"name": "Дождаться и проверить результат '15' через PageObject", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.InvalidSessionIdException: Message: invalid session id: session deleted as the browser has closed the connection\nfrom disconnected: not connected to DevTools\n  (Session info: chrome=139.0.7258.128); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalidsessionidexception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7febc78d5+2802741]\n\tGetHandleVerifier [0x0x7ff7fe92eb70+79568]\n\t(No symbol) [0x0x7ff7fe6cc0fa]\n\t(No symbol) [0x0x7ff7fe6b8365]\n\t(No symbol) [0x0x7ff7fe6dcef4]\n\t(No symbol) [0x0x7ff7fe7522c5]\n\t(No symbol) [0x0x7ff7fe772752]\n\t(No symbol) [0x0x7ff7fe74aa63]\n\t(No symbol) [0x0x7ff7fe713c91]\n\t(No symbol) [0x0x7ff7fe714a23]\n\tGetHandleVerifier [0x0x7ff7febf2ced+2979917]\n\tGetHandleVerifier [0x0x7ff7febed0f3+2956371]\n\tGetHandleVerifier [0x0x7ff7fec0acbd+3078173]\n\tGetHandleVerifier [0x0x7ff7fe94836e+184014]\n\tGetHandleVerifier [0x0x7ff7fe95024f+216495]\n\tGetHandleVerifier [0x0x7ff7fe9370c4+113700]\n\tGetHandleVerifier [0x0x7ff7fe937279+114137]\n\tGetHandleVerifier [0x0x7ff7fe91df78+10968]\n\tBaseThreadInitThunk [0x0x7ff8c1f27374+20]\n\tRtlUserThreadStart [0x0x7ff8c3b3cc91+33]\n\n", "trace": "  File \"C:\\Users\\Acer\\Desktop\\piton\\Python\\lesson_10\\tests\\test_calculator.py\", line 29, in test_calculator_sum\n    result = page.wait_for_result(\"15\", timeout=60)\n  File \"C:\\Users\\Acer\\Desktop\\piton\\Python\\lesson_10\\pages\\calculator_page.py\", line 58, in wait_for_result\n    wait.until(lambda d: d.find_element(By.CSS_SELECTOR, \"div.screen\").text.strip() == expected)\n    ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Acer\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 129, in until\n    value = method(self._driver)\n  File \"C:\\Users\\Acer\\Desktop\\piton\\Python\\lesson_10\\pages\\calculator_page.py\", line 58, in <lambda>\n    wait.until(lambda d: d.find_element(By.CSS_SELECTOR, \"div.screen\").text.strip() == expected)\n                         ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Acer\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 922, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Acer\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 454, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"C:\\Users\\Acer\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1755695693531, "stop": 1755695696134}], "start": 1755695690894, "stop": 1755695698241, "uuid": "d1cee3ad-2713-4080-a9b9-9a5a7189794e", "historyId": "3e6f9371a5665941bf3b9b116b90899b", "testCaseId": "3e6f9371a5665941bf3b9b116b90899b", "fullName": "lesson_10.tests.test_calculator#test_calculator_sum", "labels": [{"name": "feature", "value": "Калькулятор"}, {"name": "severity", "value": "critical"}, {"name": "parentSuite", "value": "lesson_10.tests"}, {"name": "suite", "value": "test_calculator"}, {"name": "host", "value": "DESKTOP-HHEGIPK"}, {"name": "thread", "value": "20748-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "lesson_10.tests.test_calculator"}], "titlePath": ["lesson_10", "tests", "test_calculator.py"]}